{"version":3,"file":"app_components_item-variant_item-attributes_jsx-app_components_item-variant_item-image_jsx-ap-c1a2e1.js","mappings":"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","sources":["webpack://bay-rewrite/./app/components/item-variant/index.jsx","webpack://bay-rewrite/./app/components/item-variant/item-attributes.jsx","webpack://bay-rewrite/./app/components/item-variant/item-image.jsx","webpack://bay-rewrite/./app/components/item-variant/item-name.jsx","webpack://bay-rewrite/./app/components/item-variant/item-price.jsx","webpack://bay-rewrite/./app/components/promo-popover/index.jsx"],"sourcesContent":["/*\n * Copyright (c) 2021, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: BSD-3-Clause\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/BSD-3-Clause\n */\nimport React, {createContext, useContext} from 'react'\nimport PropTypes from 'prop-types'\n\n/**\n * This component and associated context/hook provide a convenient wrapper\n * around a group of components used for rendering product variant details.\n */\n\nconst ItemVariantContext = createContext()\n\nexport const useItemVariant = () => {\n    return useContext(ItemVariantContext)\n}\n\n/**\n * The Provider component for rendering product item and variant detail.\n */\nconst ItemVariantProvider = ({variant, children}) => {\n    return <ItemVariantContext.Provider value={variant}>{children}</ItemVariantContext.Provider>\n}\n\nItemVariantProvider.propTypes = {\n    variant: PropTypes.object,\n    children: PropTypes.any\n}\n\nexport default ItemVariantProvider\n","/*\n * Copyright (c) 2021, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: BSD-3-Clause\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/BSD-3-Clause\n */\n\n/* eslint-disable no-unused-vars */\nimport React, {useEffect, useState} from 'react'\nimport PropTypes from 'prop-types'\nimport {FormattedMessage, FormattedNumber} from 'react-intl'\nimport useBasket from '../../commerce-api/hooks/useBasket'\nimport {Flex, Stack, Text} from '@chakra-ui/react'\nimport {useItemVariant} from './'\nimport PromoPopover from '../promo-popover'\nimport {useCurrency} from '../../hooks'\n\n/**\n * In the context of a cart product item variant, this component renders a styled\n * list of the selected variation values as well as any promos (w/ info popover).\n */\nconst ItemAttributes = ({includeQuantity, currency, ...props}) => {\n    const variant = useItemVariant()\n    const basket = useBasket()\n    const [promos, setPromos] = useState([])\n    const {currency: activeCurrency} = useCurrency()\n\n    // Create a mapping of variation values to their associated attributes. This allows us\n    // the render the readable names/labels rather than variation value IDs.\n    const variationValues = Object.keys(variant.variationValues || []).map((key) => {\n        const value = variant.variationValues[key]\n        const attr = variant.variationAttributes?.find((attr) => attr.id === key)\n        return {\n            id: key,\n            name: attr?.name || key,\n            value: attr.values.find((val) => val.value === value)?.name || value\n        }\n    })\n\n    // Fetch all the promotions given by price adjustments. We display this info in\n    // the promotion info popover when applicable.\n    useEffect(() => {\n        ;(async () => {\n            let ids\n            if (variant.priceAdjustments?.length > 0) {\n                ids = variant.priceAdjustments\n                    .map((adj) => adj.promotionId)\n                    .filter((id) => {\n                        return !promos.find((promo) => promo.id === id)\n                    })\n            }\n            if (ids && ids.length > 0) {\n                const promos = await basket.getPromotions(ids)\n                if (promos?.data) {\n                    setPromos(promos.data)\n                }\n            }\n        })()\n    }, [variant.priceAdjustments])\n\n    return (\n        <Stack spacing={1.5} flex={1} {...props}>\n            {variationValues?.map((variationValue) => (\n                <Text lineHeight={1} color=\"gray.700\" fontSize=\"sm\" key={variationValue.id}>\n                    {variationValue.name}: {variationValue.value}\n                </Text>\n            ))}\n\n            {includeQuantity && (\n                <Text lineHeight={1} color=\"gray.700\" fontSize=\"sm\">\n                    <FormattedMessage\n                        defaultMessage=\"Quantity: {quantity}\"\n                        values={{quantity: variant.quantity}}\n                    />\n                </Text>\n            )}\n\n            {variant.priceAdjustments?.length > 0 && (\n                <Flex alignItems=\"center\">\n                    <Text lineHeight={1} color=\"gray.700\" fontSize=\"sm\">\n                        <FormattedMessage defaultMessage=\"Promotions\" />\n                        {': '}\n                        <Text as=\"span\" color=\"green.500\">\n                            <FormattedNumber\n                                style=\"currency\"\n                                currency={currency || basket.currency || activeCurrency}\n                                value={variant.priceAdjustments[0].price}\n                            />\n                        </Text>\n                    </Text>\n                    <PromoPopover ml={2}>\n                        <Stack>\n                            {promos?.map((promo) => (\n                                <Text key={promo?.id} fontSize=\"sm\">\n                                    {promo?.calloutMsg}\n                                </Text>\n                            ))}\n                        </Stack>\n                    </PromoPopover>\n                </Flex>\n            )}\n        </Stack>\n    )\n}\n\nItemAttributes.propTypes = {\n    includeQuantity: PropTypes.bool,\n    currency: PropTypes.string\n}\n\nexport default ItemAttributes\n","/*\n * Copyright (c) 2021, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: BSD-3-Clause\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/BSD-3-Clause\n */\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport {AspectRatio, Box, Badge, Image} from '@chakra-ui/react'\nimport {useItemVariant} from '.'\nimport {FormattedMessage} from 'react-intl'\nimport {findImageGroupBy} from '../../utils/image-groups-utils'\n\n/**\n * In the context of a cart product item variant, this component renders the item's\n * main image.\n *\n * @todo = This component will render a `SALE` badge when the qualifier is available\n * on the custom property `c_isSale`. This will need to be expanded upon to handle\n * different badge/qualifiers and property names.\n */\nconst ItemImage = ({imageProps, ratio = 1, ...props}) => {\n    const variant = useItemVariant()\n\n    // We find the 'small' images in the variant's image groups based on variationValues and pick the first one\n    const image = findImageGroupBy(variant?.imageGroups, {\n        viewType: 'small',\n        selectedVariationAttributes: variant?.variationValues\n    })?.images?.[0]\n\n    return (\n        <Box width=\"84px\" backgroundColor=\"gray.100\" {...props}>\n            <AspectRatio ratio={ratio}>\n                <Box position=\"relative\">\n                    {variant.c_isSale && (\n                        <Badge\n                            position=\"absolute\"\n                            top={0}\n                            left={0}\n                            marginLeft={2}\n                            marginTop={2}\n                            fontSize=\"10px\"\n                            variant=\"solid\"\n                            colorScheme=\"blue\"\n                        >\n                            <FormattedMessage defaultMessage=\"Sale\" />\n                        </Badge>\n                    )}\n\n                    {image && (\n                        <Image\n                            alt={image.alt}\n                            src={image.disBaseLink}\n                            ignoreFallback={true}\n                            {...imageProps}\n                        />\n                    )}\n                </Box>\n            </AspectRatio>\n        </Box>\n    )\n}\n\nItemImage.propTypes = {\n    imageProps: PropTypes.object,\n    ratio: PropTypes.number\n}\n\nexport default ItemImage\n","/*\n * Copyright (c) 2021, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: BSD-3-Clause\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/BSD-3-Clause\n */\nimport React from 'react'\nimport {useItemVariant} from '.'\nimport Link from '../link'\n\n/**\n * In the context of a cart product item variant, this components simply renders\n * the item's name using the cart item field `productName`. We use this field\n * rather than variant `name` field as the variant detail may not yet be\n * available upon rendering.\n */\nconst ItemName = (props) => {\n    const variant = useItemVariant()\n\n    return (\n        <Link\n            fontWeight=\"bold\"\n            {...props}\n            color=\"black.600\"\n            to={`/product/${variant?.master?.masterId}`}\n        >\n            {variant.productName || variant.name}\n        </Link>\n    )\n}\n\nexport default ItemName\n","/*\n * Copyright (c) 2021, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: BSD-3-Clause\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/BSD-3-Clause\n */\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport {FormattedMessage, FormattedNumber} from 'react-intl'\nimport {Stack, Text} from '@chakra-ui/react'\nimport useBasket from '../../commerce-api/hooks/useBasket'\nimport {useItemVariant} from '.'\nimport {HideOnDesktop, HideOnMobile} from '../responsive'\nimport {useCurrency} from '../../hooks'\n\nconst PricePerItem = ({currency, basket, basePrice}) => {\n    const {currency: activeCurrency} = useCurrency()\n    return (\n        <Text fontSize={{base: '12px', lg: '14px'}}>\n            <FormattedNumber\n                style=\"currency\"\n                currency={currency || basket.currency || activeCurrency}\n                value={basePrice}\n            />\n            <FormattedMessage\n                defaultMessage=\"ea\"\n                description=\"Abbreviated 'each', follows price per item, like $10/ea\"\n            />\n        </Text>\n    )\n}\n\nPricePerItem.propTypes = {\n    currency: PropTypes.string,\n    basket: PropTypes.object,\n    basePrice: PropTypes.string\n}\n\n/**\n * In the context of a cart product item variant, this component renders the item's\n * pricing, taking into account applied discounts as well as base item prices.\n */\nconst ItemPrice = ({currency, align = 'right', baseDirection = 'column', ...props}) => {\n    const variant = useItemVariant()\n    const basket = useBasket()\n    const {currency: activeCurrency} = useCurrency()\n\n    const {price, basePrice, priceAfterItemDiscount} = variant\n\n    const displayPrice = priceAfterItemDiscount ? Math.min(price, priceAfterItemDiscount) : price\n\n    const hasDiscount = displayPrice !== price\n\n    return (\n        <Stack\n            textAlign={align}\n            direction={hasDiscount ? 'column' : {base: baseDirection, lg: 'row'}}\n            justifyContent={align === 'left' ? 'flex-start' : 'flex-end'}\n            alignItems=\"baseline\"\n            spacing={hasDiscount ? 0 : 1}\n            wrap=\"row\"\n            {...props}\n        >\n            {basePrice && price !== basePrice && (\n                <HideOnDesktop>\n                    <PricePerItem currency={currency} basePrice={basePrice} basket={basket} />\n                </HideOnDesktop>\n            )}\n            <Text fontWeight=\"bold\" lineHeight={{base: '0.5', lg: '24px'}}>\n                <FormattedNumber\n                    style=\"currency\"\n                    currency={currency || basket.currency || activeCurrency}\n                    value={displayPrice}\n                />\n                {hasDiscount && (\n                    <Text\n                        as=\"span\"\n                        fontSize=\"sm\"\n                        fontWeight=\"normal\"\n                        textDecoration=\"line-through\"\n                        color=\"gray.500\"\n                        marginLeft={1}\n                    >\n                        <FormattedNumber\n                            style=\"currency\"\n                            currency={currency || basket.currency || activeCurrency}\n                            value={price}\n                        />\n                    </Text>\n                )}\n            </Text>\n\n            {basePrice && price !== basePrice && (\n                <HideOnMobile>\n                    <PricePerItem currency={currency} basePrice={basePrice} basket={basket} />\n                </HideOnMobile>\n            )}\n        </Stack>\n    )\n}\n\nItemPrice.propTypes = {\n    currency: PropTypes.string,\n    align: PropTypes.string,\n    baseDirection: PropTypes.string\n}\n\nexport default ItemPrice\n","/*\n * Copyright (c) 2021, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: BSD-3-Clause\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/BSD-3-Clause\n */\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport {\n    Box,\n    IconButton,\n    Popover,\n    PopoverArrow,\n    PopoverBody,\n    PopoverCloseButton,\n    PopoverContent,\n    PopoverHeader,\n    PopoverTrigger,\n    Portal,\n    Text\n} from '@chakra-ui/react'\nimport {InfoIcon} from '../icons'\nimport {FormattedMessage} from 'react-intl'\n\n/**\n * This component renders a small info icon and displays a popover when hovered. It could be adapted\n * to handle any kind of popover if needed, but for now its been set up to be used/shared for displaying\n * promotions applied to products and/or orders on cart, checkout, order confirmation and order history.\n */\nconst PromoPopover = ({header, children, ...props}) => {\n    return (\n        <Box position=\"relative\" {...props}>\n            <Popover isLazy placement=\"top\" boundary=\"scrollParent\" trigger=\"hover\" variant=\"small\">\n                <PopoverTrigger>\n                    <IconButton\n                        icon={\n                            <InfoIcon\n                                display=\"block\"\n                                boxSize=\"18px\"\n                                mt=\"-2px\"\n                                ml=\"-1px\"\n                                color=\"gray.600\"\n                            />\n                        }\n                        display=\"block\"\n                        size=\"xs\"\n                        height=\"14px\"\n                        width=\"14px\"\n                        minWidth=\"auto\"\n                        position=\"relative\"\n                        variant=\"unstyled\"\n                    >\n                        <FormattedMessage defaultMessage=\"Applied promotions info\" />\n                    </IconButton>\n                </PopoverTrigger>\n                <Portal>\n                    <PopoverContent border=\"none\" borderRadius=\"base\">\n                        <Box boxShadow=\"lg\" zIndex=\"-1\">\n                            <PopoverArrow />\n                            <PopoverCloseButton />\n                            <PopoverHeader borderBottom=\"none\">\n                                {header || (\n                                    <Text fontWeight=\"bold\" fontSize=\"md\">\n                                        <FormattedMessage defaultMessage=\"Promotions Applied\" />\n                                    </Text>\n                                )}\n                            </PopoverHeader>\n                            <PopoverBody pt={0}>{children}</PopoverBody>\n                        </Box>\n                    </PopoverContent>\n                </Portal>\n            </Popover>\n        </Box>\n    )\n}\n\nPromoPopover.propTypes = {\n    header: PropTypes.any,\n    children: PropTypes.any\n}\n\nexport default PromoPopover\n"],"names":["React","createContext","useContext","PropTypes","ItemVariantContext","useItemVariant","ItemVariantProvider","variant","children","propTypes","object","any","useEffect","useState","FormattedMessage","FormattedNumber","useBasket","Flex","Stack","Text","PromoPopover","useCurrency","ItemAttributes","includeQuantity","currency","props","basket","promos","setPromos","activeCurrency","variationValues","Object","keys","map","key","value","attr","variationAttributes","find","id","name","values","val","ids","priceAdjustments","length","adj","promotionId","filter","promo","getPromotions","data","variationValue","quantity","price","calloutMsg","bool","string","AspectRatio","Box","Badge","Image","findImageGroupBy","ItemImage","imageProps","ratio","image","imageGroups","viewType","selectedVariationAttributes","images","c_isSale","alt","disBaseLink","number","Link","ItemName","master","masterId","productName","HideOnDesktop","HideOnMobile","PricePerItem","basePrice","base","lg","ItemPrice","align","baseDirection","priceAfterItemDiscount","displayPrice","Math","min","hasDiscount","IconButton","Popover","PopoverArrow","PopoverBody","PopoverCloseButton","PopoverContent","PopoverHeader","PopoverTrigger","Portal","InfoIcon","header"],"sourceRoot":""}