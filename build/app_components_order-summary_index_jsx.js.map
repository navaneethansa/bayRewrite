{"version":3,"file":"app_components_order-summary_index_jsx.js","mappings":"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","sources":["webpack://bay-rewrite/./app/components/forms/promo-code-fields.jsx","webpack://bay-rewrite/./app/components/forms/usePromoCodeFields.jsx","webpack://bay-rewrite/./app/components/order-summary/index.jsx","webpack://bay-rewrite/./app/components/promo-code/index.jsx"],"sourcesContent":["/*\n * Copyright (c) 2021, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: BSD-3-Clause\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/BSD-3-Clause\n */\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport {FormattedMessage} from 'react-intl'\nimport {Box, Button} from '@chakra-ui/react'\nimport usePromoCodeFields from './usePromoCodeFields'\nimport Field from '../field'\n\nconst PromoCodeFields = ({form, prefix = '', ...props}) => {\n    const fields = usePromoCodeFields({form, prefix})\n\n    const code = form.watch('code')\n\n    return (\n        <Box {...props}>\n            <Field inputProps={{flex: 1, mr: 2}} {...fields.code}>\n                <Button\n                    type=\"submit\"\n                    fontSize=\"sm\"\n                    isLoading={form.formState.isSubmitting}\n                    disabled={code?.length < 3}\n                >\n                    <FormattedMessage defaultMessage=\"Apply\" />\n                </Button>\n            </Field>\n        </Box>\n    )\n}\n\nPromoCodeFields.propTypes = {\n    /** Object returned from `useForm` */\n    form: PropTypes.object.isRequired,\n\n    /** Optional prefix for field names */\n    prefix: PropTypes.string\n}\n\nexport default PromoCodeFields\n","/*\n * Copyright (c) 2021, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: BSD-3-Clause\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/BSD-3-Clause\n */\nimport {useIntl} from 'react-intl'\n\nexport default function usePromoCodeFields({form: {control, errors}, prefix = ''}) {\n    const {formatMessage} = useIntl()\n\n    const fields = {\n        code: {\n            name: `${prefix}code`,\n            label: formatMessage({defaultMessage: 'Promo Code'}),\n            type: 'text',\n            defaultValue: '',\n            rules: {required: formatMessage({defaultMessage: 'Please provide a valid promo code'})},\n            error: errors[`${prefix}code`],\n            control\n        }\n    }\n\n    return fields\n}\n","/*\n * Copyright (c) 2021, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: BSD-3-Clause\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/BSD-3-Clause\n */\nimport React, {useState} from 'react'\nimport PropTypes from 'prop-types'\nimport {FormattedMessage, FormattedNumber} from 'react-intl'\nimport {Box, Flex, Button, Stack, Text, Heading, Divider} from '@chakra-ui/react'\nimport useBasket from '../../commerce-api/hooks/useBasket'\nimport {BasketIcon, ChevronDownIcon, ChevronUpIcon} from '../icons'\nimport Link from '../link'\nimport {PromoCode, usePromoCode} from '../promo-code'\nimport ItemVariantProvider from '../item-variant'\nimport CartItemVariantImage from '../item-variant/item-image'\nimport CartItemVariantName from '../item-variant/item-name'\nimport CartItemVariantAttributes from '../item-variant/item-attributes'\nimport CartItemVariantPrice from '../item-variant/item-price'\nimport PromoPopover from '../promo-popover'\n\nconst CartItems = ({basket}) => {\n    basket = basket || useBasket()\n    const [cartItemsExpanded, setCartItemsExpanded] = useState(false)\n\n    return (\n        <Stack spacing={5} width=\"full\">\n            <Box>\n                <Button\n                    variant=\"link\"\n                    leftIcon={<BasketIcon boxSize=\"22px\" />}\n                    rightIcon={cartItemsExpanded ? <ChevronUpIcon /> : <ChevronDownIcon />}\n                    onClick={() => setCartItemsExpanded(!cartItemsExpanded)}\n                >\n                    <FormattedMessage\n                        description=\"# item(s) in cart\"\n                        defaultMessage=\"{itemCount, plural, =0 {0 items} one {# item} other {# items}} in cart\"\n                        values={{itemCount: basket.itemAccumulatedCount}}\n                    />\n                </Button>\n            </Box>\n\n            {cartItemsExpanded && (\n                <Stack spacing={5} align=\"flex-start\" divider={<Divider />}>\n                    {basket.productItems?.map((product, idx) => {\n                        const variant = {\n                            ...product,\n                            ...(basket._productItemsDetail &&\n                                basket._productItemsDetail[product.productId]),\n                            price: product.price\n                        }\n                        return (\n                            <ItemVariantProvider\n                                key={product.productId}\n                                index={idx}\n                                variant={variant}\n                            >\n                                <Flex width=\"full\" alignItems=\"flex-start\">\n                                    <CartItemVariantImage width=\"80px\" mr={2} />\n                                    <Stack spacing={1} marginTop=\"-3px\">\n                                        <CartItemVariantName />\n                                        <CartItemVariantAttributes includeQuantity />\n                                        <CartItemVariantPrice baseDirection=\"row\" />\n                                    </Stack>\n                                </Flex>\n                            </ItemVariantProvider>\n                        )\n                    })}\n\n                    <Button as={Link} to=\"/cart\" variant=\"link\" width=\"full\">\n                        <FormattedMessage defaultMessage=\"Edit cart\" />\n                    </Button>\n                </Stack>\n            )}\n        </Stack>\n    )\n}\n\nCartItems.propTypes = {\n    basket: PropTypes.object\n}\n\nconst OrderSummary = ({\n    basket,\n    showPromoCodeForm = false,\n    showCartItems = false,\n    isEstimate = false,\n    fontSize = 'md'\n}) => {\n    basket = basket || useBasket()\n\n    const {removePromoCode, ...promoCodeProps} = usePromoCode()\n    const shippingItem = basket.shippingItems?.[0]\n    const hasShippingPromos = shippingItem?.priceAdjustments?.length > 0\n\n    if (!basket.basketId && !basket.orderNo) {\n        return null\n    }\n\n    return (\n        <Stack data-testid=\"sf-order-summary\" spacing={5}>\n            <Heading fontSize={fontSize} pt={1}>\n                <FormattedMessage defaultMessage=\"Order Summary\" />\n            </Heading>\n\n            <Stack spacing={4} align=\"flex-start\">\n                {showCartItems && <CartItems basket={basket} />}\n\n                <Stack w=\"full\">\n                    <Flex justify=\"space-between\">\n                        <Text fontWeight=\"bold\" fontSize={fontSize}>\n                            <FormattedMessage defaultMessage=\"Subtotal\" />\n                        </Text>\n                        <Text fontWeight=\"bold\" fontSize={fontSize}>\n                            <FormattedNumber\n                                style=\"currency\"\n                                currency={basket?.currency}\n                                value={basket?.productSubTotal}\n                            />\n                        </Text>\n                    </Flex>\n\n                    {basket.orderPriceAdjustments?.map((adjustment) => (\n                        <Flex justify=\"space-between\" key={adjustment.priceAdjustmentId}>\n                            <Text fontSize={fontSize}>{adjustment.itemText}</Text>\n                            <Text color=\"green.500\" fontSize={fontSize}>\n                                <FormattedNumber\n                                    style=\"currency\"\n                                    currency={basket?.currency}\n                                    value={adjustment.price}\n                                />\n                            </Text>\n                        </Flex>\n                    ))}\n\n                    <Flex justify=\"space-between\">\n                        <Flex alignItems=\"center\">\n                            <Text lineHeight={1} fontSize={fontSize}>\n                                <FormattedMessage defaultMessage=\"Shipping\" />\n                                {hasShippingPromos && (\n                                    <Text as=\"span\" ml={1}>\n                                        (<FormattedMessage defaultMessage=\"promo applied\" />)\n                                    </Text>\n                                )}\n                            </Text>\n                            {hasShippingPromos && (\n                                <PromoPopover ml={1}>\n                                    <Stack>\n                                        {shippingItem?.priceAdjustments?.map((adjustment) => (\n                                            <Text key={adjustment.priceAdjustmentId} fontSize=\"sm\">\n                                                {adjustment.itemText}\n                                            </Text>\n                                        ))}\n                                    </Stack>\n                                </PromoPopover>\n                            )}\n                        </Flex>\n\n                        {shippingItem?.priceAdjustments?.some(\n                            ({appliedDiscount}) => appliedDiscount?.type === 'free'\n                        ) ? (\n                            <Text\n                                as=\"span\"\n                                color=\"green.500\"\n                                textTransform=\"uppercase\"\n                                fontSize={fontSize}\n                            >\n                                <FormattedMessage defaultMessage=\"Free\" />\n                            </Text>\n                        ) : (\n                            <Text fontSize={fontSize}>\n                                <FormattedNumber\n                                    value={basket.shippingTotal}\n                                    style=\"currency\"\n                                    currency={basket.currency}\n                                />\n                            </Text>\n                        )}\n                    </Flex>\n\n                    <Flex justify=\"space-between\">\n                        <Text fontSize={fontSize}>\n                            <FormattedMessage defaultMessage=\"Tax\" />\n                        </Text>\n                        {basket.taxTotal != null ? (\n                            <Text fontSize={fontSize}>\n                                <FormattedNumber\n                                    value={basket.taxTotal}\n                                    style=\"currency\"\n                                    currency={basket.currency}\n                                />\n                            </Text>\n                        ) : (\n                            <Text fontSize={fontSize} color=\"gray.700\">\n                                TBD\n                            </Text>\n                        )}\n                    </Flex>\n                </Stack>\n\n                {showPromoCodeForm ? (\n                    <Box w=\"full\">\n                        <PromoCode {...promoCodeProps} />\n                    </Box>\n                ) : (\n                    <Divider />\n                )}\n\n                <Stack spacing={4} w=\"full\">\n                    <Flex w=\"full\" justify=\"space-between\">\n                        {isEstimate ? (\n                            <Text fontWeight=\"bold\" fontSize={fontSize}>\n                                <FormattedMessage defaultMessage=\"Estimated Total\" />\n                            </Text>\n                        ) : (\n                            <Text fontWeight=\"bold\" fontSize={fontSize}>\n                                <FormattedMessage defaultMessage=\"Order Total\" />\n                            </Text>\n                        )}\n                        <Text fontWeight=\"bold\" fontSize={fontSize}>\n                            <FormattedNumber\n                                style=\"currency\"\n                                currency={basket?.currency}\n                                value={basket?.orderTotal || basket?.productTotal}\n                            />\n                        </Text>\n                    </Flex>\n\n                    {basket.couponItems?.length > 0 && (\n                        <Stack\n                            p={4}\n                            border=\"1px solid\"\n                            borderColor=\"gray.100\"\n                            borderRadius=\"base\"\n                            bg=\"white\"\n                        >\n                            <Text fontWeight=\"medium\" fontSize={fontSize}>\n                                <FormattedMessage defaultMessage=\"Promotions applied\" />:\n                            </Text>\n                            <Stack>\n                                {basket.couponItems.map((item) => (\n                                    <Flex key={item.couponItemId} alignItems=\"center\">\n                                        <Text\n                                            flex=\"1\"\n                                            fontSize=\"sm\"\n                                            textTransform=\"uppercase\"\n                                            color=\"gray.800\"\n                                        >\n                                            {item.code}\n                                        </Text>\n                                        {!basket.orderNo && (\n                                            <Button\n                                                variant=\"link\"\n                                                size=\"sm\"\n                                                colorScheme=\"red\"\n                                                onClick={() => removePromoCode(item.couponItemId)}\n                                            >\n                                                <FormattedMessage defaultMessage=\"Remove\" />\n                                            </Button>\n                                        )}\n                                    </Flex>\n                                ))}\n                            </Stack>\n                        </Stack>\n                    )}\n                </Stack>\n            </Stack>\n        </Stack>\n    )\n}\n\nOrderSummary.propTypes = {\n    basket: PropTypes.object,\n    showPromoCodeForm: PropTypes.bool,\n    showCartItems: PropTypes.bool,\n    isEstimate: PropTypes.bool,\n    fontSize: PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl'])\n}\n\nexport default OrderSummary\n","/*\n * Copyright (c) 2021, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: BSD-3-Clause\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/BSD-3-Clause\n */\nimport React, {useEffect, useState} from 'react'\nimport PropTypes from 'prop-types'\nimport {FormattedMessage, useIntl} from 'react-intl'\nimport {\n    Box,\n    Button,\n    Accordion,\n    AccordionButton,\n    AccordionItem,\n    AccordionPanel,\n    useToast\n} from '@chakra-ui/react'\nimport {useForm} from 'react-hook-form'\nimport {ChevronDownIcon, ChevronUpIcon} from '../../components/icons'\nimport useBasket from '../../commerce-api/hooks/useBasket'\nimport PromoCodeFields from '../../components/forms/promo-code-fields'\nimport {API_ERROR_MESSAGE} from '../../constants'\n\nexport const usePromoCode = () => {\n    const {formatMessage} = useIntl()\n    const basket = useBasket()\n    const form = useForm()\n    const toast = useToast()\n\n    const submitPromoCode = async ({code}) => {\n        try {\n            await basket.applyPromoCode(code)\n            form.reset({code: ''})\n            toast({\n                title: formatMessage({defaultMessage: 'Promotion applied'}),\n                status: 'success',\n                position: 'top-right',\n                isClosable: true\n            })\n        } catch (err) {\n            form.setError('code', {\n                type: 'manual',\n                message: formatMessage({\n                    defaultMessage:\n                        'Check the code and try again, it may already be applied or the promo has expired'\n                })\n            })\n        }\n    }\n\n    const removePromoCode = async (couponItemId) => {\n        try {\n            await basket.removePromoCode(couponItemId)\n            toast({\n                title: formatMessage({defaultMessage: 'Promotion removed'}),\n                status: 'success',\n                position: 'top-right',\n                isClosable: true\n            })\n        } catch (err) {\n            toast({\n                title: formatMessage(\n                    {defaultMessage: '{errorMessage}'},\n                    {errorMessage: API_ERROR_MESSAGE}\n                ),\n                status: 'error',\n                position: 'top-right',\n                isClosable: true\n            })\n        }\n    }\n\n    return {form, submitPromoCode, removePromoCode}\n}\n\nexport const PromoCode = ({form, submitPromoCode, itemProps}) => {\n    const [isOpen, setOpen] = useState()\n\n    useEffect(() => {\n        if (form.formState.isSubmitSuccessful) {\n            setOpen(false)\n        }\n    }, [form.formState.isSubmitSuccessful])\n\n    return (\n        <Accordion allowToggle index={isOpen ? 0 : -1} onChange={() => setOpen(!isOpen)}>\n            <AccordionItem {...itemProps}>\n                {({isExpanded}) => (\n                    <>\n                        <AccordionButton\n                            as={Button}\n                            justifyContent=\"flex-start\"\n                            variant=\"link\"\n                            fontSize=\"sm\"\n                            rightIcon={isExpanded ? <ChevronUpIcon /> : <ChevronDownIcon />}\n                            onClick={() => form.reset()}\n                        >\n                            <FormattedMessage defaultMessage=\"Do you have a promo code?\" />\n                        </AccordionButton>\n\n                        <AccordionPanel px={0} mb={4}>\n                            <Box\n                                data-testid=\"promo-code-form\"\n                                as=\"form\"\n                                p={4}\n                                background=\"white\"\n                                border=\"1px solid\"\n                                borderColor=\"gray.100\"\n                                borderRadius=\"base\"\n                                onSubmit={form.handleSubmit(submitPromoCode)}\n                            >\n                                <PromoCodeFields form={form} maxWidth=\"350px\" />\n                            </Box>\n                        </AccordionPanel>\n                    </>\n                )}\n            </AccordionItem>\n        </Accordion>\n    )\n}\n\nPromoCode.propTypes = {\n    /** The form object returned from `usePromoCode` hook */\n    form: PropTypes.object.isRequired,\n\n    /** The submit callback returned from `usePromoCode` hook */\n    submitPromoCode: PropTypes.func.isRequired,\n\n    /** Props applied to inner AccordionItem. Useful for style overrides. */\n    itemProps: PropTypes.object\n}\n\nexport default PromoCode\n"],"names":["React","PropTypes","FormattedMessage","Box","Button","usePromoCodeFields","Field","PromoCodeFields","form","prefix","props","fields","code","watch","flex","mr","formState","isSubmitting","length","propTypes","object","isRequired","string","useIntl","control","errors","formatMessage","name","label","defaultMessage","type","defaultValue","rules","required","error","useState","FormattedNumber","Flex","Stack","Text","Heading","Divider","useBasket","BasketIcon","ChevronDownIcon","ChevronUpIcon","Link","PromoCode","usePromoCode","ItemVariantProvider","CartItemVariantImage","CartItemVariantName","CartItemVariantAttributes","CartItemVariantPrice","PromoPopover","CartItems","basket","cartItemsExpanded","setCartItemsExpanded","itemCount","itemAccumulatedCount","productItems","map","product","idx","variant","_productItemsDetail","productId","price","OrderSummary","showPromoCodeForm","showCartItems","isEstimate","fontSize","removePromoCode","promoCodeProps","shippingItem","shippingItems","hasShippingPromos","priceAdjustments","basketId","orderNo","currency","productSubTotal","orderPriceAdjustments","adjustment","priceAdjustmentId","itemText","some","appliedDiscount","shippingTotal","taxTotal","orderTotal","productTotal","couponItems","item","couponItemId","bool","oneOf","useEffect","Accordion","AccordionButton","AccordionItem","AccordionPanel","useToast","useForm","API_ERROR_MESSAGE","toast","submitPromoCode","applyPromoCode","reset","title","status","position","isClosable","err","setError","message","errorMessage","itemProps","isOpen","setOpen","isSubmitSuccessful","isExpanded","handleSubmit","func"],"sourceRoot":""}