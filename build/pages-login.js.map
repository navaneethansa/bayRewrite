{"version":3,"file":"pages-login.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,MAAMY,KAAK,GAAG,MAAM;AAChB,QAAM;AAACC,IAAAA;AAAD,MAAkBV,sDAAO,EAA/B;AAEA,QAAMW,QAAQ,GAAGP,iEAAa,EAA9B;AACA,QAAMQ,QAAQ,GAAGT,2EAAW,EAA5B;AACA,QAAMU,IAAI,GAAGP,wDAAO,EAApB;AACA,QAAMQ,QAAQ,GAAGP,6DAAW,EAA5B;;AAEA,QAAMQ,UAAU;AAAA,mGAAG,WAAOC,IAAP,EAAgB;AAC/B,UAAI;AACA,cAAMJ,QAAQ,CAACK,KAAT,CAAeD,IAAf,CAAN;AACH,OAFD,CAEE,OAAOE,KAAP,EAAc;AACZ,cAAMC,OAAO,GAAG,uBAAuBC,IAAvB,CAA4BF,KAAK,CAACC,OAAlC,IACVT,aAAa,CAAC;AAAA;AACVW,UAAAA,cAAc;AAAA;AAAA;AAAA;AADJ,SAAD,CADH,GAIVH,KAAK,CAACC,OAJZ;AAKAN,QAAAA,IAAI,CAACS,QAAL,CAAc,QAAd,EAAwB;AAACC,UAAAA,IAAI,EAAE,QAAP;AAAiBJ,UAAAA;AAAjB,SAAxB;AACH;AACJ,KAXe;;AAAA,oBAAVJ,UAAU;AAAA;AAAA;AAAA,KAAhB,CARgB,CAqBhB;;;AACAjB,EAAAA,gDAAS,CAAC,MAAM;AACZ,QAAIc,QAAQ,CAACY,QAAT,IAAqB,IAArB,IAA6BZ,QAAQ,CAACa,YAA1C,EAAwD;AAAA;;AACpD,UAAIX,QAAJ,aAAIA,QAAJ,kCAAIA,QAAQ,CAAEY,KAAd,4CAAI,gBAAiBC,YAArB,EAAmC;AAC/BhB,QAAAA,QAAQ,CAACG,QAAQ,CAACY,KAAT,CAAeC,YAAhB,CAAR;AACH,OAFD,MAEO;AACHhB,QAAAA,QAAQ,CAAC,UAAD,CAAR;AACH;AACJ;AACJ,GARQ,EAQN,CAACC,QAAD,CARM,CAAT;AAUA,sBACI,iDAAC,kDAAD;AAAK,mBAAY,YAAjB;AAA8B,MAAE,EAAC,SAAjC;AAA2C,MAAE,EAAE,CAAC,CAAD,EAAI,EAAJ;AAA/C,kBACI,iDAAC,uDAAD;AAAK,SAAK,EAAC,SAAX;AAAqB,eAAW,EAAC;AAAjC,IADJ,eAEI,iDAAC,wDAAD;AACI,cAAU,EAAE,EADhB;AAEI,SAAK,EAAE,CAAC,MAAD,EAAS,OAAT,CAFX;AAGI,MAAE,EAAC,OAHP;AAII,iBAAa,EAAE,EAJnB;AAKI,aAAS,EAAE,CALf;AAMI,gBAAY,EAAE,CANlB;AAOI,gBAAY,EAAC;AAPjB,kBASI,iDAAC,yDAAD;AACI,QAAI,EAAEC,IADV;AAEI,cAAU,EAAEE,UAFhB;AAGI,sBAAkB,EAAE,MAAMJ,QAAQ,CAAC,eAAD,CAHtC;AAII,uBAAmB,EAAE,MAAMA,QAAQ,CAAC,iBAAD;AAJvC,IATJ,CAFJ,CADJ;AAqBH,CArDD;;AAuDAF,KAAK,CAACmB,eAAN,GAAwB,MAAM,OAA9B;;AAEAnB,KAAK,CAACoB,SAAN,GAAkB;AACdC,EAAAA,KAAK,EAAE/B,0DAAgBgC;AADT,CAAlB;AAIA,+DAAetB,KAAf","sources":["webpack://bay-rewrite/./app/pages/login/index.jsx"],"sourcesContent":["/*\n * Copyright (c) 2021, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: BSD-3-Clause\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/BSD-3-Clause\n */\n\nimport React, {useEffect} from 'react'\nimport PropTypes from 'prop-types'\nimport {useIntl} from 'react-intl'\nimport {Box, Container} from '@chakra-ui/react'\nimport useCustomer from '../../commerce-api/hooks/useCustomer'\nimport useNavigation from '../../hooks/use-navigation'\nimport Seo from '../../components/seo'\nimport {useForm} from 'react-hook-form'\nimport {useLocation} from 'react-router-dom'\n\nimport LoginForm from '../../components/login'\n\nconst Login = () => {\n    const {formatMessage} = useIntl()\n\n    const navigate = useNavigation()\n    const customer = useCustomer()\n    const form = useForm()\n    const location = useLocation()\n\n    const submitForm = async (data) => {\n        try {\n            await customer.login(data)\n        } catch (error) {\n            const message = /invalid credentials/i.test(error.message)\n                ? formatMessage({\n                      defaultMessage: 'Incorrect username or password, please try again.'\n                  })\n                : error.message\n            form.setError('global', {type: 'manual', message})\n        }\n    }\n\n    // If customer is registered push to account page\n    useEffect(() => {\n        if (customer.authType != null && customer.isRegistered) {\n            if (location?.state?.directedFrom) {\n                navigate(location.state.directedFrom)\n            } else {\n                navigate('/account')\n            }\n        }\n    }, [customer])\n\n    return (\n        <Box data-testid=\"login-page\" bg=\"gray.50\" py={[8, 16]}>\n            <Seo title=\"Sign in\" description=\"Customer sign in\" />\n            <Container\n                paddingTop={16}\n                width={['100%', '407px']}\n                bg=\"white\"\n                paddingBottom={14}\n                marginTop={8}\n                marginBottom={8}\n                borderRadius=\"base\"\n            >\n                <LoginForm\n                    form={form}\n                    submitForm={submitForm}\n                    clickCreateAccount={() => navigate('/registration')}\n                    clickForgotPassword={() => navigate('/reset-password')}\n                />\n            </Container>\n        </Box>\n    )\n}\n\nLogin.getTemplateName = () => 'login'\n\nLogin.propTypes = {\n    match: PropTypes.object\n}\n\nexport default Login\n"],"names":["React","useEffect","PropTypes","useIntl","Box","Container","useCustomer","useNavigation","Seo","useForm","useLocation","LoginForm","Login","formatMessage","navigate","customer","form","location","submitForm","data","login","error","message","test","defaultMessage","setError","type","authType","isRegistered","state","directedFrom","getTemplateName","propTypes","match","object"],"sourceRoot":""}