{"version":3,"file":"pages-account-wishlist.js","mappings":"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","sources":["webpack://bay-rewrite/./app/components/page-action-placeholder/index.jsx","webpack://bay-rewrite/./app/pages/account/wishlist/index.jsx","webpack://bay-rewrite/./app/pages/account/wishlist/partials/wishlist-primary-action.jsx","webpack://bay-rewrite/./app/pages/account/wishlist/partials/wishlist-secondary-button-group.jsx"],"sourcesContent":["/*\n * Copyright (c) 2021, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: BSD-3-Clause\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/BSD-3-Clause\n */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport {Box, Button, Stack, Text} from '@chakra-ui/react'\nimport {PlusIcon} from '../../components/icons'\n\nconst PageActionPlaceHolder = ({heading, text, icon, buttonText, buttonProps, onButtonClick}) => {\n    return (\n        <Stack\n            spacing={2}\n            py={12}\n            px={4}\n            alignItems=\"center\"\n            borderRadius=\"base\"\n            background=\"gray.50\"\n        >\n            <Box>{icon}</Box>\n            <Stack spacing={6} alignItems=\"center\">\n                <Box>\n                    <Text align=\"center\" fontSize=\"lg\" fontWeight=\"bold\">\n                        {heading}\n                    </Text>\n                    <Text align=\"center\" fontSize=\"md\" color=\"gray.700\">\n                        {text}\n                    </Text>\n                </Box>\n                <Button onClick={onButtonClick} leftIcon={<PlusIcon />} {...buttonProps}>\n                    {buttonText}\n                </Button>\n            </Stack>\n        </Stack>\n    )\n}\n\nPageActionPlaceHolder.propTypes = {\n    heading: PropTypes.string,\n    text: PropTypes.string,\n    buttonText: PropTypes.string,\n    icon: PropTypes.any,\n    buttonProps: PropTypes.object,\n    onButtonClick: PropTypes.func\n}\n\nexport default PageActionPlaceHolder\n","/*\n * Copyright (c) 2021, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: BSD-3-Clause\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/BSD-3-Clause\n */\nimport React, {useEffect, useState} from 'react'\nimport {Stack, Heading} from '@chakra-ui/layout'\nimport {FormattedMessage, useIntl} from 'react-intl'\nimport {Box, Flex, Skeleton} from '@chakra-ui/react'\n\nimport useCustomer from '../../../commerce-api/hooks/useCustomer'\nimport useNavigation from '../../../hooks/use-navigation'\nimport useWishlist from '../../../hooks/use-wishlist'\nimport {useToast} from '../../../hooks/use-toast'\n\nimport PageActionPlaceHolder from '../../../components/page-action-placeholder'\nimport {HeartIcon} from '../../../components/icons'\nimport ProductItem from '../../../components/product-item/index'\nimport WishlistPrimaryAction from './partials/wishlist-primary-action'\nimport WishlistSecondaryButtonGroup from './partials/wishlist-secondary-button-group'\n\nimport {API_ERROR_MESSAGE} from '../../../constants'\n\nconst numberOfSkeletonItems = 3\n\nconst AccountWishlist = () => {\n    const customer = useCustomer()\n    const navigate = useNavigation()\n    const {formatMessage} = useIntl()\n    const toast = useToast()\n    const [selectedItem, setSelectedItem] = useState(undefined)\n    const [localQuantity, setLocalQuantity] = useState({})\n    const [isWishlistItemLoading, setWishlistItemLoading] = useState(false)\n    const wishlist = useWishlist()\n\n    const handleActionClicked = (itemId) => {\n        setWishlistItemLoading(!!itemId)\n        setSelectedItem(itemId)\n    }\n\n    const handleItemQuantityChanged = async (quantity, item) => {\n        // This local state allows the dropdown to show the desired quantity\n        // while the API call to update it is happening.\n        setLocalQuantity({...localQuantity, [item.productId]: quantity})\n        setWishlistItemLoading(true)\n        setSelectedItem(item.productId)\n        try {\n            await wishlist.updateListItem({\n                ...item,\n                quantity: parseInt(quantity)\n            })\n        } catch {\n            toast({\n                title: formatMessage(\n                    {defaultMessage: '{errorMessage}'},\n                    {errorMessage: API_ERROR_MESSAGE}\n                ),\n                status: 'error'\n            })\n        }\n        setWishlistItemLoading(false)\n        setSelectedItem(undefined)\n        setLocalQuantity({...localQuantity, [item.productId]: undefined})\n    }\n\n    useEffect(() => {\n        if (customer.isRegistered) {\n            // We want to reset the wishlist here\n            // because it is possible that a user\n            // adds an item to the wishlist on another page\n            // and the wishlist page may not have enough\n            // data to render the page.\n            // Reset the wishlist will make sure the\n            // initialization state is correct.\n            if (wishlist.isInitialized) {\n                wishlist.reset()\n            }\n\n            wishlist.init({detail: true})\n        }\n    }, [customer.isRegistered])\n\n    return (\n        <Stack spacing={4} data-testid=\"account-wishlist-page\">\n            <Heading as=\"h1\" fontSize=\"2xl\">\n                <FormattedMessage defaultMessage=\"Wishlist\" />\n            </Heading>\n            {!wishlist.hasDetail && (\n                <Box data-testid=\"sf-wishlist-skeleton\">\n                    {new Array(numberOfSkeletonItems).fill(0).map((i, idx) => (\n                        <Box\n                            key={idx}\n                            p={[4, 6]}\n                            my={4}\n                            border=\"1px solid\"\n                            borderColor=\"gray.100\"\n                            borderRadius=\"base\"\n                        >\n                            <Flex width=\"full\" align=\"flex-start\">\n                                <Skeleton boxSize={['88px', 36]} mr={4} />\n\n                                <Stack spacing={2}>\n                                    <Skeleton h=\"20px\" w=\"112px\" />\n                                    <Skeleton h=\"20px\" w=\"84px\" />\n                                    <Skeleton h=\"20px\" w=\"140px\" />\n                                </Stack>\n                            </Flex>\n                        </Box>\n                    ))}\n                </Box>\n            )}\n\n            {wishlist.hasDetail && wishlist.isEmpty && (\n                <PageActionPlaceHolder\n                    data-testid=\"empty-wishlist\"\n                    icon={<HeartIcon boxSize={8} />}\n                    heading={formatMessage({defaultMessage: 'No Wishlist Items'})}\n                    text={formatMessage({\n                        defaultMessage: 'Continue shopping and add items to your wishlist'\n                    })}\n                    buttonText={formatMessage({\n                        defaultMessage: 'Continue Shopping'\n                    })}\n                    buttonProps={{leftIcon: undefined}}\n                    onButtonClick={() => navigate('/')}\n                />\n            )}\n\n            {wishlist.hasDetail &&\n                !wishlist.isEmpty &&\n                wishlist.items.map((item) => (\n                    <ProductItem\n                        key={item.id}\n                        product={{\n                            ...item.product,\n                            quantity: localQuantity[item.productId]\n                                ? localQuantity[item.productId]\n                                : item.quantity\n                        }}\n                        showLoading={isWishlistItemLoading && selectedItem === item.productId}\n                        primaryAction={<WishlistPrimaryAction />}\n                        onItemQuantityChange={(quantity) =>\n                            handleItemQuantityChanged(quantity, item)\n                        }\n                        secondaryActions={\n                            <WishlistSecondaryButtonGroup\n                                productListItemId={item.id}\n                                onClick={handleActionClicked}\n                            />\n                        }\n                    />\n                ))}\n        </Stack>\n    )\n}\n\nexport default AccountWishlist\n","/*\n * Copyright (c) 2021, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: BSD-3-Clause\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/BSD-3-Clause\n */\nimport React, {useState} from 'react'\nimport {Button, useDisclosure} from '@chakra-ui/react'\nimport useBasket from '../../../../commerce-api/hooks/useBasket'\nimport {useIntl} from 'react-intl'\nimport {useItemVariant} from '../../../../components/item-variant'\nimport ProductViewModal from '../../../../components/product-view-modal'\nimport {useToast} from '../../../../hooks/use-toast'\nimport {API_ERROR_MESSAGE} from '../../../../constants'\n\n/**\n * Renders primary action on a product-item card in the form of a button.\n * Represents the most prominent action you want the user to perform with the product-item\n * eg.: Add to cart option for wishlist items\n */\nconst WishlistPrimaryAction = () => {\n    const variant = useItemVariant()\n    const basket = useBasket()\n    const {formatMessage} = useIntl()\n    const isMasterProduct = variant?.type?.master || false\n    const showToast = useToast()\n    const [isLoading, setIsLoading] = useState(false)\n    const {isOpen, onOpen, onClose} = useDisclosure()\n    const handleAddToCart = async (item, quantity) => {\n        setIsLoading(true)\n        const productItems = [\n            {\n                productId: item.id || item.productId,\n                price: item.price,\n                quantity\n            }\n        ]\n        try {\n            await basket.addItemToBasket(productItems)\n            showToast({\n                title: formatMessage(\n                    {\n                        defaultMessage:\n                            '{quantity} {quantity, plural, one {item} other {items}} added to cart'\n                    },\n                    {quantity: quantity}\n                ),\n                status: 'success'\n            })\n            onClose()\n        } catch (error) {\n            showToast({\n                title: formatMessage(\n                    {defaultMessage: '{errorMessage}'},\n                    {errorMessage: API_ERROR_MESSAGE}\n                ),\n                status: 'error'\n            })\n        }\n        setIsLoading(false)\n    }\n\n    return (\n        <>\n            {isMasterProduct ? (\n                <>\n                    <Button w={'full'} variant={'solid'} onClick={onOpen}>\n                        Select Options\n                    </Button>\n                    {isOpen && (\n                        <ProductViewModal\n                            isOpen={isOpen}\n                            onOpen={onOpen}\n                            onClose={onClose}\n                            product={variant}\n                            addToCart={(variant, quantity) => handleAddToCart(variant, quantity)}\n                        />\n                    )}\n                </>\n            ) : (\n                <Button\n                    variant={'solid'}\n                    onClick={() => handleAddToCart(variant, variant.quantity)}\n                    w={'full'}\n                    isLoading={isLoading}\n                >\n                    Add To Cart\n                </Button>\n            )}\n        </>\n    )\n}\n\nexport default WishlistPrimaryAction\n","/*\n * Copyright (c) 2021, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: BSD-3-Clause\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/BSD-3-Clause\n */\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport {Button, ButtonGroup, useDisclosure} from '@chakra-ui/react'\nimport {useIntl, defineMessage, FormattedMessage} from 'react-intl'\n\nimport useWishlist from '../../../../hooks/use-wishlist'\nimport {useToast} from '../../../../hooks/use-toast'\n\nimport ConfirmationModal from '../../../../components/confirmation-modal/index'\nimport {useItemVariant} from '../../../../components/item-variant'\nimport {noop} from '../../../../utils/utils'\nimport {API_ERROR_MESSAGE} from '../../../../constants'\n\nexport const REMOVE_WISHLIST_ITEM_CONFIRMATION_DIALOG_CONFIG = {\n    dialogTitle: defineMessage({defaultMessage: 'Confirm Remove Item'}),\n    confirmationMessage: defineMessage({\n        defaultMessage: 'Are you sure you want to remove this item from your wishlist?'\n    }),\n    primaryActionLabel: defineMessage({defaultMessage: 'Yes, remove item'}),\n    alternateActionLabel: defineMessage({defaultMessage: 'No, keep item'}),\n    onPrimaryAction: noop\n}\n\n/**\n * Renders secondary actions on a product-item card in the form of a button group.\n * Represents other actions you want the user to perform with the product-item (eg.: Remove or Edit)\n */\nconst WishlistSecondaryButtonGroup = ({productListItemId, onClick = noop}) => {\n    const variant = useItemVariant()\n    const wishlist = useWishlist()\n    const modalProps = useDisclosure()\n    const toast = useToast()\n    const {formatMessage} = useIntl()\n\n    const showRemoveItemConfirmation = () => {\n        modalProps.onOpen()\n    }\n\n    const handleItemRemove = async () => {\n        onClick(variant.id)\n        try {\n            await wishlist.removeListItem(productListItemId)\n            toast({\n                title: formatMessage({defaultMessage: 'Item removed from wishlist'}),\n                status: 'success'\n            })\n        } catch {\n            toast({\n                title: formatMessage(\n                    {defaultMessage: '{errorMessage}'},\n                    {errorMessage: API_ERROR_MESSAGE}\n                ),\n                status: 'error'\n            })\n        }\n        onClick('')\n    }\n\n    return (\n        <>\n            <ButtonGroup spacing=\"6\">\n                <Button\n                    variant=\"link\"\n                    size=\"sm\"\n                    onClick={showRemoveItemConfirmation}\n                    data-testid={`sf-wishlist-remove-${productListItemId}`}\n                >\n                    <FormattedMessage defaultMessage=\"Remove\" />\n                </Button>\n                {/* <Button variant=\"link\" size=\"sm\" onClick={onItemEdit}>\n            <FormattedMessage defaultMessage=\"Edit\" />\n        </Button> */}\n            </ButtonGroup>\n\n            <ConfirmationModal\n                {...REMOVE_WISHLIST_ITEM_CONFIRMATION_DIALOG_CONFIG}\n                onPrimaryAction={handleItemRemove}\n                {...modalProps}\n            />\n        </>\n    )\n}\n\nWishlistSecondaryButtonGroup.propTypes = {\n    productListItemId: PropTypes.string,\n    onClick: PropTypes.func\n}\n\nexport default WishlistSecondaryButtonGroup\n"],"names":["React","PropTypes","Box","Button","Stack","Text","PlusIcon","PageActionPlaceHolder","heading","text","icon","buttonText","buttonProps","onButtonClick","propTypes","string","any","object","func","useEffect","useState","Heading","FormattedMessage","useIntl","Flex","Skeleton","useCustomer","useNavigation","useWishlist","useToast","HeartIcon","ProductItem","WishlistPrimaryAction","WishlistSecondaryButtonGroup","API_ERROR_MESSAGE","numberOfSkeletonItems","AccountWishlist","customer","navigate","formatMessage","toast","selectedItem","setSelectedItem","undefined","localQuantity","setLocalQuantity","isWishlistItemLoading","setWishlistItemLoading","wishlist","handleActionClicked","itemId","handleItemQuantityChanged","quantity","item","productId","updateListItem","parseInt","title","defaultMessage","errorMessage","status","isRegistered","isInitialized","reset","init","detail","hasDetail","Array","fill","map","i","idx","isEmpty","leftIcon","items","id","product","useDisclosure","useBasket","useItemVariant","ProductViewModal","variant","basket","isMasterProduct","type","master","showToast","isLoading","setIsLoading","isOpen","onOpen","onClose","handleAddToCart","productItems","price","addItemToBasket","error","ButtonGroup","defineMessage","ConfirmationModal","noop","REMOVE_WISHLIST_ITEM_CONFIRMATION_DIALOG_CONFIG","dialogTitle","confirmationMessage","primaryActionLabel","alternateActionLabel","onPrimaryAction","productListItemId","onClick","modalProps","showRemoveItemConfirmation","handleItemRemove","removeListItem"],"sourceRoot":""}