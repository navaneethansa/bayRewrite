{"version":3,"file":"pages-product-detail.js","mappings":"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","sources":["webpack://bay-rewrite/./app/pages/product-detail/index.jsx"],"sourcesContent":["/*\n * Copyright (c) 2021, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: BSD-3-Clause\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/BSD-3-Clause\n */\n\nimport React, {useEffect, useState} from 'react'\nimport PropTypes from 'prop-types'\nimport {Helmet} from 'react-helmet'\nimport {FormattedMessage, useIntl} from 'react-intl'\n\n// Components\nimport {\n    Accordion,\n    AccordionItem,\n    AccordionButton,\n    AccordionPanel,\n    AccordionIcon,\n    Box,\n    Button,\n    Stack\n} from '@chakra-ui/react'\n\n// Hooks\nimport useBasket from '../../commerce-api/hooks/useBasket'\nimport {useVariant} from '../../hooks'\nimport useWishlist from '../../hooks/use-wishlist'\nimport useNavigation from '../../hooks/use-navigation'\nimport useEinstein from '../../commerce-api/hooks/useEinstein'\n\n// Project Components\nimport RecommendedProducts from '../../components/recommended-products'\nimport ProductView from '../../partials/product-view'\n\n// Others/Utils\nimport {HTTPNotFound} from 'pwa-kit-react-sdk/ssr/universal/errors'\n\n// constant\nimport {API_ERROR_MESSAGE} from '../../constants'\nimport {rebuildPathWithParams} from '../../utils/url'\nimport {useHistory} from 'react-router-dom'\nimport {useToast} from '../../hooks/use-toast'\n\nconst ProductDetail = ({category, product, isLoading}) => {\n    const {formatMessage} = useIntl()\n    const basket = useBasket()\n    const history = useHistory()\n    const einstein = useEinstein()\n    const variant = useVariant(product)\n    const toast = useToast()\n    const navigate = useNavigation()\n    const [primaryCategory, setPrimaryCategory] = useState(category)\n\n    // This page uses the `primaryCategoryId` to retrieve the category data. This attribute\n    // is only available on `master` products. Since a variation will be loaded once all the\n    // attributes are selected (to get the correct inventory values), the category information\n    // is overridden. This will allow us to keep the initial category around until a different\n    // master product is loaded.\n    useEffect(() => {\n        if (category) {\n            setPrimaryCategory(category)\n        }\n    }, [category])\n\n    /**************** Product Variant ****************/\n    useEffect(() => {\n        // update the variation attributes parameter on\n        // the url accordingly as the variant changes\n        const updatedUrl = rebuildPathWithParams(`${location.pathname}${location.search}`, {\n            pid: variant?.productId\n        })\n        history.replace(updatedUrl)\n    }, [variant])\n\n    /**************** Wishlist ****************/\n    const wishlist = useWishlist()\n    const handleAddToWishlist = async (quantity) => {\n        try {\n            await wishlist.createListItem({\n                id: product.id,\n                quantity\n            })\n            toast({\n                title: formatMessage(\n                    {\n                        defaultMessage:\n                            '{quantity} {quantity, plural, one {item} other {items}} added to wishlist'\n                    },\n                    {quantity: 1}\n                ),\n                status: 'success',\n                action: (\n                    <Button variant=\"link\" onClick={() => navigate('/account/wishlist')}>\n                        View\n                    </Button>\n                )\n            })\n        } catch {\n            toast({\n                title: formatMessage(\n                    {defaultMessage: '{errorMessage}'},\n                    {errorMessage: API_ERROR_MESSAGE}\n                ),\n                status: 'error'\n            })\n        }\n    }\n\n    /**************** Add To Cart ****************/\n    const showToast = useToast()\n    const showError = () => {\n        showToast({\n            title: formatMessage(\n                {defaultMessage: '{errorMessage}'},\n                {errorMessage: API_ERROR_MESSAGE}\n            ),\n            status: 'error'\n        })\n    }\n    const handleAddToCart = async (variant, quantity) => {\n        try {\n            if (!variant?.orderable || !quantity) return\n            // The basket accepts an array of `ProductItems`, so lets create a single\n            // item array to add to the basket.\n            const productItems = [\n                {\n                    productId: variant.productId,\n                    quantity,\n                    price: variant.price\n                }\n            ]\n\n            await basket.addItemToBasket(productItems)\n        } catch (error) {\n            showError(error)\n        }\n    }\n\n    /**************** Einstein ****************/\n    useEffect(() => {\n        if (product) {\n            einstein.sendViewProduct(product)\n        }\n    }, [product])\n\n    return (\n        <Box\n            className=\"sf-product-detail-page\"\n            layerStyle=\"page\"\n            data-testid=\"product-details-page\"\n        >\n            <Helmet>\n                <title>{product?.pageTitle}</title>\n                <meta name=\"description\" content={product?.pageDescription} />\n            </Helmet>\n\n            <Stack spacing={16}>\n                <ProductView\n                    product={product}\n                    category={primaryCategory?.parentCategoryTree || []}\n                    addToCart={(variant, quantity) => handleAddToCart(variant, quantity)}\n                    addToWishlist={(_, quantity) => handleAddToWishlist(quantity)}\n                    isProductLoading={isLoading}\n                    isCustomerProductListLoading={!wishlist.isInitialized}\n                />\n\n                {/* Information Accordion */}\n                <Stack direction=\"row\" spacing={[0, 0, 0, 16]}>\n                    <Accordion allowMultiple allowToggle maxWidth={'896px'} flex={[1, 1, 1, 5]}>\n                        {/* Details */}\n                        <AccordionItem>\n                            <h2>\n                                <AccordionButton height=\"64px\">\n                                    <Box flex=\"1\" textAlign=\"left\" fontWeight=\"bold\" fontSize=\"lg\">\n                                        {formatMessage({\n                                            defaultMessage: 'Product Detail'\n                                        })}\n                                    </Box>\n                                    <AccordionIcon />\n                                </AccordionButton>\n                            </h2>\n                            <AccordionPanel mb={6} mt={4}>\n                                <div\n                                    dangerouslySetInnerHTML={{\n                                        __html: product?.longDescription\n                                    }}\n                                />\n                            </AccordionPanel>\n                        </AccordionItem>\n\n                        {/* Size & Fit */}\n                        <AccordionItem>\n                            <h2>\n                                <AccordionButton height=\"64px\">\n                                    <Box flex=\"1\" textAlign=\"left\" fontWeight=\"bold\" fontSize=\"lg\">\n                                        {formatMessage({\n                                            defaultMessage: 'Size & Fit'\n                                        })}\n                                    </Box>\n                                    <AccordionIcon />\n                                </AccordionButton>\n                            </h2>\n                            <AccordionPanel mb={6} mt={4}>\n                                {formatMessage({defaultMessage: 'Coming Soon'})}\n                            </AccordionPanel>\n                        </AccordionItem>\n\n                        {/* Reviews */}\n                        <AccordionItem>\n                            <h2>\n                                <AccordionButton height=\"64px\">\n                                    <Box flex=\"1\" textAlign=\"left\" fontWeight=\"bold\" fontSize=\"lg\">\n                                        {formatMessage({\n                                            defaultMessage: 'Reviews'\n                                        })}\n                                    </Box>\n                                    <AccordionIcon />\n                                </AccordionButton>\n                            </h2>\n                            <AccordionPanel mb={6} mt={4}>\n                                Coming Soon\n                            </AccordionPanel>\n                        </AccordionItem>\n\n                        {/* Questions */}\n                        <AccordionItem>\n                            <h2>\n                                <AccordionButton height=\"64px\">\n                                    <Box flex=\"1\" textAlign=\"left\" fontWeight=\"bold\" fontSize=\"lg\">\n                                        {formatMessage({\n                                            defaultMessage: 'Questions'\n                                        })}\n                                    </Box>\n                                    <AccordionIcon />\n                                </AccordionButton>\n                            </h2>\n                            <AccordionPanel mb={6} mt={4}>\n                                Coming Soon\n                            </AccordionPanel>\n                        </AccordionItem>\n                    </Accordion>\n                    <Box display={['none', 'none', 'none', 'block']} flex={4}></Box>\n                </Stack>\n\n                {/* Product Recommendations */}\n                <Stack spacing={16}>\n                    <RecommendedProducts\n                        title={<FormattedMessage defaultMessage=\"Complete The Set\" />}\n                        recommender={'complete-the-set'}\n                        products={product && [product.id]}\n                        mx={{base: -4, md: -8, lg: 0}}\n                        shouldFetch={() => product?.id}\n                    />\n\n                    <RecommendedProducts\n                        title={<FormattedMessage defaultMessage=\"You Might Also Like\" />}\n                        recommender={'pdp-similar-items'}\n                        products={product && [product.id]}\n                        mx={{base: -4, md: -8, lg: 0}}\n                        shouldFetch={() => product?.id}\n                    />\n\n                    <RecommendedProducts\n                        title={<FormattedMessage defaultMessage=\"Recently Viewed\" />}\n                        recommender={'viewed-recently-einstein'}\n                        mx={{base: -4, md: -8, lg: 0}}\n                    />\n                </Stack>\n            </Stack>\n        </Box>\n    )\n}\n\nProductDetail.getTemplateName = () => 'product-detail'\n\nProductDetail.shouldGetProps = ({previousLocation, location}) => {\n    const previousParams = new URLSearchParams(previousLocation?.search || '')\n    const params = new URLSearchParams(location.search)\n\n    // If the product changed via the pathname or `pid` param, allow updated\n    // data to be retrieved.\n    return (\n        previousLocation?.pathname !== location.pathname ||\n        previousParams.get('pid') !== params.get('pid')\n    )\n}\n\nProductDetail.getProps = async ({res, params, location, api}) => {\n    const {productId} = params\n    let category, product\n    const urlParams = new URLSearchParams(location.search)\n\n    product = await api.shopperProducts.getProduct({\n        parameters: {\n            id: urlParams.get('pid') || productId,\n            allImages: true\n        }\n    })\n\n    if (product?.primaryCategoryId) {\n        category = await api.shopperProducts.getCategory({\n            parameters: {id: product?.primaryCategoryId, levels: 1}\n        })\n    }\n\n    // Set the `cache-control` header values similar to those on the product-list.\n    if (res) {\n        res.set('Cache-Control', 'max-age=900')\n    }\n\n    // The `commerce-isomorphic-sdk` package does not throw errors, so\n    // we have to check the returned object type to inconsistencies.\n    if (typeof product?.type === 'string') {\n        throw new HTTPNotFound(product.detail)\n    }\n    if (typeof category?.type === 'string') {\n        throw new HTTPNotFound(category.detail)\n    }\n\n    return {category, product}\n}\n\nProductDetail.propTypes = {\n    /**\n     * The category object used for breadcrumb construction.\n     */\n    category: PropTypes.object,\n    /**\n     * The product object to be shown on the page..\n     */\n    product: PropTypes.object,\n    /**\n     * The current state of `getProps` when running this value is `true`, otherwise it's\n     * `false`. (Provided internally)\n     */\n    isLoading: PropTypes.bool,\n    /**\n     * The current react router match object. (Provided internally)\n     */\n    match: PropTypes.object\n}\n\nexport default ProductDetail\n"],"names":["React","useEffect","useState","PropTypes","Helmet","FormattedMessage","useIntl","Accordion","AccordionItem","AccordionButton","AccordionPanel","AccordionIcon","Box","Button","Stack","useBasket","useVariant","useWishlist","useNavigation","useEinstein","RecommendedProducts","ProductView","HTTPNotFound","API_ERROR_MESSAGE","rebuildPathWithParams","useHistory","useToast","ProductDetail","category","product","isLoading","formatMessage","basket","history","einstein","variant","toast","navigate","primaryCategory","setPrimaryCategory","updatedUrl","location","pathname","search","pid","productId","replace","wishlist","handleAddToWishlist","quantity","createListItem","id","title","defaultMessage","status","action","errorMessage","showToast","showError","handleAddToCart","orderable","productItems","price","addItemToBasket","error","sendViewProduct","pageTitle","pageDescription","parentCategoryTree","_","isInitialized","__html","longDescription","base","md","lg","getTemplateName","shouldGetProps","previousLocation","previousParams","URLSearchParams","params","get","getProps","res","api","urlParams","shopperProducts","getProduct","parameters","allImages","primaryCategoryId","getCategory","levels","set","type","detail","propTypes","object","bool","match"],"sourceRoot":""}